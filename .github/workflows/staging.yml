
name: Deploy to aws

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: [ "master","dev" ]

jobs:
  deploy_on_qa:

    runs-on: ubuntu-latest
    environment: JWT_KEY

    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v3
      
    - name: Create User Env file
      working-directory: ./users
      run: |
        touch .env
        echo JWT_KEY= ${{vars.JWT_KEY}} >> .env
        echo AUTH_EMAIL= ${{vars.AUTH_EMAIL}} >> .env
        echo AUTH_PASS= ${{vars.AUTH_PASS}} >> .env
        echo JWTSECRET= ${{vars.JWTSECRET}} >> .env
        echo AMQP_URL= ${{vars.AMQP_URL}} >> .env
        echo EXCHANGE_NAME= ${{vars.EXCHANGE_NAME}} >> .env
        echo USER_BINDING_KEY= ${{vars.USER_BINDING_KEY}} >> .env
        echo TICKET_BINDING_KEY= ${{vars.TICKET_BINDING_KEY}} >> .env
        echo TWILIO_ACCOUNT_SID = ${{vars.TWILIO_ACCOUNT_SID }} >> .env
        echo TWILIO_AUTH_TOKEN = ${{vars.TWILIO_AUTH_TOKEN}} >> .env
        echo TWILIO_PHONE_NUMBER= ${{vars.TWILIO_PHONE_NUMBER}} >> .env
        echo SERVER_PORT = 8001
        cat .env
        
    - name: Create Tickets Env file
      working-directory: ./users
      run: |
        echo "repository key : ${{secrets.AWS_ACCESS_KEY}} "
        echo "repository secrest : ${{secrets.AWS_ACCESS_SECRET}}"
        touch .env
        echo JWT_KEY= ${{vars.JWT_KEY}} >> .env
        echo AUTH_EMAIL= ${{vars.AUTH_EMAIL}} >> .env
        echo AUTH_PASS= ${{vars.AUTH_PASS}} >> .env
        echo JWTSECRET= ${{vars.JWTSECRET}} >> .env
        echo AMQP_URL= ${{vars.AMQP_URL}} >> .env
        echo EXCHANGE_NAME= ${{vars.EXCHANGE_NAME}} >> .env
        echo USER_BINDING_KEY= ${{vars.USER_BINDING_KEY}} >> .env
        echo TICKET_BINDING_KEY= ${{vars.TICKET_BINDING_KEY}} >> .env
        echo TWILIO_ACCOUNT_SID = ${{vars.TWILIO_ACCOUNT_SID }} >> .env
        echo TWILIO_AUTH_TOKEN = ${{vars.TWILIO_AUTH_TOKEN}} >> .env
        echo TWILIO_PHONE_NUMBER= ${{vars.TWILIO_PHONE_NUMBER}} >> .env
        echo SERVER_PORT = 8002
        cat .env
        
    - name: Generate deployemnt package
      run: |
        zip -r deploy.zip . -x '*.git'

       
    - name: Deploy on Elastic beanstalk QA Env
      uses: einaregilsson/beanstalk-deploy@v21
  
      with:
        aws_access_key: ${{secrets.AWS_ACCESS_KEY}}
        aws_secret_key: ${{secrets.AWS_ACCESS_SECRET}}
        application_name: saferoad-dev
        environment_name: Saferoaddev-env
        version_labe: "ver-${{ github.sha}}"
        region: us-east-1
        deployment_package: deploy.zip
      
